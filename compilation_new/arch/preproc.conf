#=====================================================================
# MPI - flags
#=====================================================================
# MSGPASS_FLAG = -DMPI               -   MPI usage
# MSGPASS_FLAG = -DMPI -DNo_MPI_LOCK -   MPI2 fix when 
#                                        MPI_win_lock/MPI_win_unlock 
#                                        are not supported.
#                                        (mpich2 on workstations with 
#                                        intel dual core processors)
# MSGPASS_FLAG =                     -   Do not make use of the
#                                        interface module to MPI2
#=====================================================================
  MSGPASS_FLAG = -DMPI -DNo_DataComm
# MSGPASS_FLAG = -DMPI -DNo_MPI_LOCK -DNo_DataComm
#=====================================================================
# Synchronization Options for MPI environment
#=====================================================================
# Use_SYNC = -DSync_EiLoop  - enables syncronization in the energy loop
#                             ensure MPI2 synchronization of t-matrices
#            -DSync_MST     - enables syncronization in MST solver usefull
#                             on some systems especially for ScreenKKR method
# Use_SYNC =                - Do not force synchronization
#=====================================================================
  Use_SYNC = -DSync_EiLoop -DSync_MST
#
#=====================================================================
# Various libraries and methods - flags
#=====================================================================
  SuperLU = 0
#
  ifeq "$(SuperLU)" "0"
     SuperLU_FLAG = -DNo_SuperLU
     SLULIB =
     DSUPERLULIB =
  else
     SuperLU_FLAG =
     SLULIB =
     SLUPATH =
     LDFLAGS+=$(SLULIB)
  endif
#
#=====================================================================
# Set Use_FFTW = 1 to use FFTW package for Fourier transformation
#=====================================================================
#
  Use_FFTW = 0
#
  ifeq "$(Use_FFTW)" "1"
     FFT_FLAG = -DFFTW
     FFTLIB = $(FFTW_PATH)/lib/libfftw3.a
     LDFLAGS+=$(FFTLIB)
  endif
#=====================================================================
# You can turn off XDR format of the output potential data by
# uncommenting the following line
#=====================================================================
# Use_XDR = -DNoXDR_format

#=====================================================================
# Miscellaneous Flags
#=====================================================================
# Check_TIMING = -DTIMING
# Use_DEBUG    = -DDEBUG
# Use_BLAS     = -DNo_BLAS
#
# Values :: -DCHECK_WRONSKIAN -DPOT_Dipol -DCHECK_Matrix -DCheckDOS
# Use_MiscFlags = -DCHECK_Matrix -DCHECK_WRONSKIAN
# Use_MiscFlags = -DCHECK_Matrix
# Use_MiscFlags = -DCheck_XC -DCheckDOS -DCHECK_L2M0
# Use_MiscFlags = -DCHECK_L2M0 -DCHECK_Matrix
# Use_MiscFlags = -DCHECK_L2M0
# Use_MiscFlags = -DCheckDOS
# Use_MiscFlags = -DCHECK_Matrix

#=====================================================================
# PREPROCESSING configuration
#=====================================================================
# EMBEDDED_PREPROC = 1 - the preprocessing is done by the defined compiler
#                  = 0 - external preprocessing( usually "cpp -P" )
#
# EMBEDDED_PREPROC = 1
#=====================================================================
#
  PREPROC_FLAG = $(SuperLU_FLAG) $(Check_TIMING) $(Use_BLAS) $(Use_DEBUG) \
                 $(Use_SYNC) $(FFT_FLAG) $(Use_MiscFlags) $(MSGPASS_FLAG)
